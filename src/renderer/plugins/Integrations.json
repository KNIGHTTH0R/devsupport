  {
    "name": "LazyPay Android Integration",
    "changes": [
      {
        "name": "Add dependency to lazypay",
        "fileSelector": ".+build.gradle$",
        "changeType": "fileEdit",
        "fileType": "gradle",
        "change": [
          {
            "changeType": "add.line",
            "line": "\ncompile 'in.lazypay:sdk2:0.0.1'",
            "action": "append",
            "query": "compile 'com.android.support"
          }
        ],
        "validations": [
          {
            "checkType": "negative",
            "query": ".+in.lazypay:sdk2.+"
          },
          {
            "checkType": "positive",
            "query": "compile 'com.android.support"
          }
        ]
      },
      {
        "name": "Server Side code - PHP",
        "fileSelector": "^$",
        "changeType": "fileDownload",
        "fileName": "handle_server_redirect.php",
        "fileType": "php",
        "variables": [
          {
            "name": "accessKey",
            "label": "Access Key",
            "stage": 1,
            "description": "The access key will be inject to your AndroidManifest.xml, to be used by LazyPay SDK",
            "help": "You can find this in the welcome email from lazypay"
          },
          {
            "name": "secretKey",
            "label": "Secret Key",
            "stage": 1,
            "description": "The access secret will be used to create the Server side PHP code",
            "help": "You can find this on the lazypay dashboard"
          },
          {
            "name": "backendUrl",
            "label": "Backend Url",
            "stage": 2,
            "description": "Your end users will be sent to this page after payment completion",
            "help": "The url pointing to the PHP script"
          }
        ],
        "change": [
          {
            "changeType": "download.file",
            "line": "<?php\n\n$secret_key = '{{=it.secretKey}}';\n$access_key = '{{=it.accessKey}}';\n\nfunction elig_sign($email, $mobile, $amount, $access_key, $secret_key) {\n    $hash_before = $mobile . $email . $amount . 'INR';\n    $signature = hash_hmac('sha1', $hash_before, $secret_key);\n    echo $signature;\n}\n\nfunction initpay_sign($txnid, $amount, $access_key, $secret_key) {\n    $hash_before = 'merchantAccessKey=' . $access_key . '&' . 'transactionId=' . $txnid . \"&\"\n        . \"amount=\" . $amount;\n    $signature = hash_hmac('sha1', $hash_before, $secret_key);\n    echo $signature;\n}\n\nfunction auto_debitsign($txnid, $amount, $access_key, $secret_key) {\n    initpay_sign($txnid, $amount, $access_key, $secret_key);\n}\n\nfunction otpsign($txReferencenum, $access_key, $secret_key) {\n    $hash_before = 'merchantAccessKey=' . $access_key . '&' . 'txnRefNo=' . $txReferencenum;\n    $signature = hash_hmac('sha1', $hash_before, $secret_key);\n    echo $signature;\n}\n\n$sign_type = $_POST['type'];\n\nif ($sign_type == 'elligibility') {\n    $amount = $_POST['amount'];\n    $email = $_POST['email'];\n    $mobile = $_POST['mobile'];\n    elig_sign($email, $mobile, $amount, $access_key, $secret_key);\n}\n\nelse if ($sign_type == 'initpay') {\n    $txnId = $_POST['txnId'];\n    $amount = $_POST['amount'];\n    initpay_sign($txnId, $amount, $access_key, $secret_key);\n}\n\nelse if ($sign_type == 'autodebit') {\n    $txnId = $_POST['txnId'];\n    $amount = $_POST['amount'];\n    auto_debitsign($txnId, $amount, $access_key, $secret_key);\n}\n\nelse if ($sign_type == 'otpsign') {\n    $txnref = $_POST['txnref'];\n    otpsign($txnref, $access_key, $secret_key);\n}\nelse {\n    echo 'Wrong signature type';\n}"
          }
        ]
      },
      {
        "name": "Add key to AndroidManifest.xml",
        "fileSelector": ".+main[\\\\/]AndroidManifest.xml",
        "changeType": "fileEdit",
        "fileType": "xml",
        "change": {
          "changeType": "add.line",
          "line": "<meta-data android:name=\"in.sdk.lazypay\" android:value=\"{{=it.accessKey}}\"/>",
          "action": "prepend",
          "query": "</application>"
        },
        "validations": {
          "checkType": "negative",
          "query": "in.sdk.lazypay"
        }
      },
      {
        "name": "Add functions to some Activity.java for Initiate Pay and Handle Response",
        "fileSelector": ".+Activity.java",
        "changeType": "fileEdit",
        "fileType": "java",
        "change": [
          {
            "changeType": "add.line",
            "action": "append",
            "query": "{",
            "line": "\n@Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n        switch (requestCode) {\n            case 1: {\n                switch (resultCode) {\n                    case Lazypay.LAZYPAY_SUCCESS :\n                        Toast.makeText(getApplicationContext(), \"Transaction Successful\", Toast.LENGTH_LONG)\n                                .show();\n                        break;\n                    case Lazypay.LAZYPAY_FAILED:\n                        Toast.makeText(getApplicationContext(), \"Transaction Failed\", Toast.LENGTH_LONG)\n                                .show();\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n    }",
            "validations": [
              {
                "checkType": "negative",
                "query": "onActivityResult"
              }
            ]
          },
          {
            "changeType": "add.line",
            "action": "append",
            "query": "{",
            "line": "\nprivate void callLazyPay(String email, String mobile, String amount) {\n  \n//Todo: set backend url to: {{=it.backendUrl}}\n\n      Intent intent = new Intent(this.getApplicationContext(), Lazypay.class);\n\n        intent.putExtra(\"email\", email);\n\n        intent.putExtra(\"mobile\", mobile);\n\n        intent.putExtra(\"amount\", amount);\n\n        startActivityForResult(intent, 1);\n    }",
            "validations": [
              {
                "checkType": "negative",
                "query": "callLazyPay"
              }
            ]
          },
          {
            "changeType": "add.line",
            "action": "append",
            "query": "{",
            "line": "\nprivate void askforSMSPermission() {\n        if (Build.VERSION.SDK_INT < 23) {\n            return;\n        }\n\n        if (ContextCompat.checkSelfPermission(MainActivity.this,\n                Manifest.permission.READ_SMS)\n                != PackageManager.PERMISSION_GRANTED) {\n\n            if (ActivityCompat.shouldShowRequestPermissionRationale(MainActivity.this,\n                    Manifest.permission.READ_SMS)) {\n                Toast.makeText(getApplicationContext(), \"SMS Permission for enable auto OTP reading\", Toast.LENGTH_LONG)\n                        .show();\n\n            } else {\n                ActivityCompat.requestPermissions(MainActivity.this,\n                        new String[]{Manifest.permission.READ_SMS},\n                        READ_SMS_PERMISSION);\n            }\n        }\n\n    }\n\n",
            "validations": [
              {
                "checkType": "negative",
                "query": "private void askforSMSPermission"
              }
            ]
          },
          {
            "changeType": "add.line",
            "action": "append",
            "query": "import",
            "line": "import lazypay.app.Lazypay;\nimport android.content.Intent;\n",
            "validations": [
              {
                "checkType": "negative",
                "query": "lazypay.app.Lazypay"
              }
            ]
          },
          {
            "changeType": "add.line",
            "action": "append",
            "query": "setContentView",
            "line": "askforSMSPermission();\n\n",
            "validations": [
              {
                "checkType": "negative",
                "query": "askforSMSPermission"
              }
            ]
          },
          {
            "changeType": "add.line",
            "action": "append",
            "query": "import",
            "line": "\nimport android.widget.Toast;\n",
            "validations": [
              {
                "checkType": "negative",
                "query": "android.widget.Toast"
              }
            ]
          }
        ],
        "validations": []
      }
    ]
  }
